<Window x:Class="ImageViewer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ImageViewer.Views"
        xmlns:vm="clr-namespace:ImageViewer.ViewModels"
        Title="ImageViewer" Height="360" Width="525" MinHeight="96" MinWidth="{Binding ElementName=StatusBarElements, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged}" ResizeMode="CanResizeWithGrip" Background="#FF2D2D30">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainWindowResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveImageCommand}"></KeyBinding>
        <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyToClipboardCommand}"></KeyBinding>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenInBrowserCommand}"></KeyBinding>
        <KeyBinding Key="F" Modifiers="Control" Command="{Binding SearchByGoogleCommand}"></KeyBinding>
    </Window.InputBindings>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger MessageKey="Save" Messenger="{Binding Messenger}">
            <l:SaveFileDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid Name="WindowRoot" Background="#FF2D2D30" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="*" />
            <RowDefinition Height="24" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" WindowChrome.IsHitTestVisibleInChrome="True">
            <Grid.DataContext>
                <vm:CaptionBarViewModel />
            </Grid.DataContext>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
                </i:EventTrigger>
                <l:InteractionMessageTrigger MessageKey="WindowMessage" Messenger="{Binding Messenger}" InvokeActionsOnlyWhileAttatchedObjectLoaded="True">
                    <l:WindowInteractionMessageAction />
                </l:InteractionMessageTrigger>
            </i:Interaction.Triggers>

            <StackPanel Orientation="Horizontal" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Label Content="ImageViewer" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8,0,0,0" Foreground="#FFFAFAFF" FontSize="14" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button Content="0" FontFamily="Marlett" Width="28" Height="20" Margin="0,0,1,0" Template="{DynamicResource CaptionButton}" Command="{Binding MinimizeCommand}" />
                <Button Content="{Binding MaximizeButtonContent}" FontFamily="Marlett" Width="28" Height="20" Margin="0,0,1,0" Template="{DynamicResource CaptionButton}" Command="{Binding MaximizeCommand}" />
                <Button Content="r" FontFamily="Marlett" Width="48" Height="20" Margin="0" Template="{DynamicResource CloseButton}" Command="{Binding CloseCommand}" />
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="SaveAs" InputGestureText="Ctrl+S" Command="{Binding SaveImageCommand}"/>
                    <MenuItem Header="Copy to Clipboard" InputGestureText="Ctrl+C" Command="{Binding CopyToClipboardCommand}"/>
                    <MenuItem Header="Open in Browser" InputGestureText="Ctrl+O" Command="{Binding OpenInBrowserCommand}"/>
                    <MenuItem Header="Search by Google Images" InputGestureText="Ctrl+F" Command="{Binding OpenInBrowserCommand}"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <Image Name="Image" Source="{Binding ImageUri, IsAsync=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" RenderOptions.BitmapScalingMode="Fant" />
            <WrapPanel HorizontalAlignment="Left" VerticalAlignment="Bottom">
                <Button Command="{Binding SaveImageCommand}" ToolTip="SaveAs" VerticalAlignment="Bottom" HorizontalAlignment="Left" Template="{DynamicResource TransparentButton}">
                    <Image Source="/Resources/IcoMoon/save.png" Width="24" Height="24" />
                </Button>
                <Button Command="{Binding CopyToClipboardCommand}" ToolTip="Copy to Clipboard" VerticalAlignment="Bottom" HorizontalAlignment="Left" Template="{DynamicResource TransparentButton}">
                    <Image Source="/ImageViewer;component/Resources/IcoMoon/copy.png" Width="24" Height="24" />
                </Button>
                <Button Command="{Binding OpenInBrowserCommand}" ToolTip="Open in Browser" VerticalAlignment="Bottom" HorizontalAlignment="Left" Template="{DynamicResource TransparentButton}">
                    <Image Source="/ImageViewer;component/Resources/IcoMoon/open.png" Width="24" Height="24" />
                </Button>
                <Button Command="{Binding SearchByGoogleCommand}" ToolTip="Search by Google Images" VerticalAlignment="Bottom" HorizontalAlignment="Left" Template="{DynamicResource TransparentButton}">
                    <Image Source="/ImageViewer;component/Resources/IcoMoon/search.png" Width="24" Height="24" />
                </Button>
            </WrapPanel>
        </Grid>
        <Grid Grid.Row="2" Background="#FF338ECC">
            <WrapPanel x:Name="StatusBarElements" HorizontalAlignment="Left">
                <Label Content="" Padding="0,5" />
                <Label Content="Render:" Padding="5,0" VerticalAlignment="Center" />
                <Label Content="{Binding ImageRenderWidth, FallbackValue=0}" Padding="0" VerticalAlignment="Center" />
                <Label Content="x" Padding="2,0" VerticalAlignment="Center" />
                <Label Content="{Binding ImageRenderHeight, FallbackValue=0}" Padding="0" VerticalAlignment="Center" />
                <Label Content="px" Padding="5,0" VerticalAlignment="Center"/>

                <Label Content="Image:" Padding="5,0" VerticalAlignment="Center" />
                <Label Content="{Binding FallbackImage.Width, FallbackValue=0}" Padding="0" VerticalAlignment="Center" />
                <Label Content="x" Padding="2,0" VerticalAlignment="Center"/>
                <Label Content="{Binding FallbackImage.Height, FallbackValue=0}" Padding="0" VerticalAlignment="Center"/>
                <Label Content="px" Padding="5,0" VerticalAlignment="Center"/>

                <Label Content="Zoom:" Padding="5,0" VerticalAlignment="Center"/>
                <Label Content="{Binding Zoom, FallbackValue=0}" Padding="0" VerticalAlignment="Center" />
                <Label Content="%" Padding="5,0" VerticalAlignment="Center"/>
                
                <Label Content="padding" Padding="5,0" VerticalAlignment="Center" Foreground="{x:Null}"/>
            </WrapPanel>
        </Grid>
    </Grid>
</Window>