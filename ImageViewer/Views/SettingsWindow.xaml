<Window x:Class="ImageViewer.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ImageViewer.Views"
        xmlns:vm="clr-namespace:ImageViewer.ViewModels"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        Title="設定" Height="480" Width="800" ResizeMode="NoResize" WindowStartupLocation="CenterOwner">

    <Window.DataContext>
        <vm:SettingsWindowViewModel />
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ViewWindow/MainWindowResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <l:InteractionMessageTrigger MessageKey="WindowMessage" Messenger="{Binding Messenger}"
                                     InvokeActionsOnlyWhileAttatchedObjectLoaded="True">
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="Open" Messenger="{Binding Messenger}">
            <l:OpenFileDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="32" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="240" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <ListView Name="Menu" Grid.Column="0" Grid.RowSpan="1" BorderThickness="0,0,1,0"
                  BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Style.Setters>
                        <Setter Property="Padding">
                            <Setter.Value>
                                <Thickness>2,4</Thickness>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </ListView.Resources>
            <ListViewItem Content="全般" />
            <ListViewItem Content="ビューアー" />
            <ListViewItem Content="サイト別設定" />
            <ListViewItem Content="外部アプリケーション" />
            <ListViewItem Content="バージョン情報" />
        </ListView>
        <TabControl x:Name="TabControl" Grid.Column="1" Grid.Row="0" Grid.RowSpan="1"
                    SelectedIndex="{Binding SelectedIndex, ElementName=Menu}" BorderBrush="{x:Null}">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem" />
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <!--全般-->
            <TabItem>
                <StackPanel>
                    <StackPanel>
                        <CheckBox Content="擬似シングルインスタンスを有効にする"
                                  IsChecked="{Binding IsEnablePseudoSingleInstance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Margin="0,10,0,0" />
                        <TextBlock Text="プロセス間通信 (IPC) 関連のエラーが発生する場合は無効にしてください" Margin="32,0,0,0" />
                        <TextBlock Text="設定の反映にはImageViewerの再起動が必要です" Margin="32,0,0,0" />

                        <StackPanel Margin="32,0,0,0">
                            <CheckBox Content="アグレッシブモードを有効にする (Experimental)"
                                  IsEnabled="{Binding IsEnablePseudoSingleInstance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsChecked="{Binding IsEnableAggressiveMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Margin="0,10,0,0" />
                            <TextBlock Text="タスクトレイに常駐して起動直後のプロセス間通信 (IPC) 関連のエラーを軽減します" Margin="32,0,0,0" />
                            <TextBlock Text="設定の反映にはImageViewerの再起動が必要です" Margin="32,0,0,0" />

                            <StackPanel Margin="32,0,0,0">
                                <StackPanel>
                                    <CheckBox Content="通知を非表示にする"
                                  IsEnabled="{Binding IsEnableAggressiveMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsChecked="{Binding IsDisableNotificationWhenAggressiveMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Margin="0,10,0,0" />
                                    <TextBlock Text="常駐時の煩わしい通知を表示させないようにします" Margin="32,0,0,0" />
                                </StackPanel>
                                
                                <StackPanel>
                                    <CheckBox Content="タブの状態を保持する"
                                  IsEnabled="{Binding IsEnableAggressiveMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  IsChecked="{Binding IsKeepingTabsWhenAggressiveMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Margin="0,10,0,0" />
                                    <TextBlock Text="ウィンドウを閉じても開いているタブを保持し続けます" Margin="32,0,0,0" />
                                    <TextBlock Text="メモリが解放されないので 32GB 以上のRAMを積んでいる環境を推奨します" Margin="32,0,0,0" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel>
                        <CheckBox Content="起動時に呼び出し元ウィンドウの中央に表示する"
                                  IsChecked="{Binding IsChildWindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Margin="0,10,0,0" />
                        <TextBlock Text="副作用として呼び出し元ウィンドウよりも手前に表示されます" Margin="32,0,0,0" />
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <!--ビューアー-->
            <TabItem>
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="64" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="マウスセンシ" Padding="0,0,8,0" HorizontalAlignment="Left"
                                   VerticalAlignment="Center" />
                        <Slider Grid.Column="1"
                                Value="{Binding MouseSensibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Minimum="0.1" TickPlacement="Both" />
                        <TextBox Grid.Column="2"
                                 Text="{Binding MouseSensibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N6}"
                                 VerticalContentAlignment="Center" HorizontalContentAlignment="Right" />
                    </Grid>
                </StackPanel>
            </TabItem>

            <!--サイト別設定-->
            <TabItem>
                <ScrollViewer>
                    <StackPanel>
                        <StackPanel Margin="0,0,0,24">
                            <StackPanel>
                                <TextBlock Text="Twitter" FontSize="14.667" FontWeight="Bold" Margin="8,0,0,0" />
                                <Border BorderBrush="{DynamicResource MetroBlue}" BorderThickness="0,1,0,0" />
                            </StackPanel>
                            <CheckBox Content="GIF動画を外部アプリケーションにフォールバックする"
                                      IsChecked="{Binding IsFallbackTwitterGifMovie, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Margin="0,10,0,0" />
                            <CheckBox Content="30秒動画にはサムネイルではなく警告を表示する"
                                      IsChecked="{Binding IsWarningTwitter30secMovie, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Margin="0,10,0,0" />
                        </StackPanel>

                        <StackPanel Margin="0,0,0,24">
                            <StackPanel>
                                <TextBlock Text="Pixiv" FontSize="14.667" FontWeight="Bold" Margin="8,0,0,0" />
                                <Border BorderBrush="{DynamicResource MetroBlue}" BorderThickness="0,1,0,0" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="取得ソース（よく分からない場合は変更しないでください）" Margin="2,10,0,0" />
                                <RadioButton Content="img.azyobuzi.net （全年齢のみ）" IsChecked="True" Margin="16,4,0,0" />
                                <RadioButton x:Name="PixivWebScrapingRadioButton" Content="独自Webスクレイピング"
                                             IsChecked="{Binding IsUsePixivWebScraping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="16,4,0,0" />
                                <Grid Margin="48,4,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="8" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="ID" />
                                    <TextBox Grid.Column="2" Grid.Row="0"
                                             Text="{Binding PixivAccount.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             IsEnabled="{Binding ElementName=PixivWebScrapingRadioButton, Path=IsChecked}" />
                                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Password" />
                                    <PasswordBox Grid.Column="2" Grid.Row="2"
                                                 IsEnabled="{Binding ElementName=PixivWebScrapingRadioButton, Path=IsChecked}">
                                        <i:Interaction.Behaviors>
                                            <l:PasswordBoxBindingSupportBehavior
                                                Password="{Binding PixivAccount.RawPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </i:Interaction.Behaviors>
                                    </PasswordBox>
                                    <StackPanel Grid.Row="4" Grid.ColumnSpan="3">
                                        <TextBlock Text="入力されたアカウント情報は、ログイン処理、および画像の取得にのみ使用します" />
                                        <WrapPanel>
                                            <TextBlock Text="挙動に対して疑問がある場合は、" />
                                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                                            <Hyperlink
                                                NavigateUri="https://github.com/mohemohe/ImageViewer/blob/develop/ImageViewer/Infrastructures/PixivCrawler.cs"
                                                RequestNavigate="Hyperlink_RequestNavigate">
                                                ImageViewerのソースコード
                                            </Hyperlink>
                                            </TextBlock>
                                            <TextBlock Text="を確認してください" />
                                        </WrapPanel>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Margin="0,0,0,24">
                            <StackPanel>
                                <TextBlock Text="ニコニコ静画（イラスト）" FontSize="14.667" FontWeight="Bold" Margin="8,0,0,0" />
                                <Border BorderBrush="{DynamicResource MetroBlue}" BorderThickness="0,1,0,0" />
                            </StackPanel>
                            <StackPanel>
                                <TextBlock Text="取得ソース（よく分からない場合は変更しないでください）" Margin="2,10,0,0" />
                                <RadioButton Content="Open Graph Protocol （低解像度）" IsChecked="True" Margin="16,4,0,0" />
                                <RadioButton x:Name="SeigaWebScrapingRadioButton" Content="独自Webスクレイピング"
                                             IsChecked="{Binding IsUseNicoSeigaWebScraping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="16,4,0,0" />
                                <Grid Margin="48,4,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="8" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="ID" />
                                    <TextBox Grid.Column="2" Grid.Row="0"
                                             Text="{Binding SeigaAccount.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             IsEnabled="{Binding ElementName=SeigaWebScrapingRadioButton, Path=IsChecked}" />
                                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Password" />
                                    <PasswordBox Grid.Column="2" Grid.Row="2"
                                                 IsEnabled="{Binding ElementName=SeigaWebScrapingRadioButton, Path=IsChecked}">
                                        <i:Interaction.Behaviors>
                                            <l:PasswordBoxBindingSupportBehavior
                                                Password="{Binding SeigaAccount.RawPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </i:Interaction.Behaviors>
                                    </PasswordBox>
                                    <StackPanel Grid.Row="4" Grid.ColumnSpan="3">
                                        <TextBlock Text="入力されたアカウント情報は、ログイン処理、および画像の取得にのみ使用します" />
                                        <WrapPanel>
                                            <TextBlock Text="挙動に対して疑問がある場合は、" />
                                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                                            <Hyperlink
                                                NavigateUri="https://github.com/mohemohe/ImageViewer/blob/develop/ImageViewer/Infrastructures/SeigaCrawler.cs"
                                                RequestNavigate="Hyperlink_RequestNavigate">
                                                ImageViewerのソースコード
                                            </Hyperlink>
                                            </TextBlock>
                                            <TextBlock Text="を確認してください" />
                                        </WrapPanel>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <!--外部アプリケーション-->
            <TabItem>
                <StackPanel>
                    <Grid VerticalAlignment="Top" Margin="0,10,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="32" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="使用するブラウザなど"
                               Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               VerticalAlignment="Center" />
                        <TextBlock Grid.Column="1" Text="空白で既定のブラウザを使用します"
                                   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                   VerticalAlignment="Center" Margin="3,0,0,0" />
                        <TextBox Grid.Column="1"
                                 Text="{Binding DefaultBrowserPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 VerticalContentAlignment="Center"
                                 Background="{qc:Binding '$P != string.Empty ? new SolidColorBrush(Colors.White) : new SolidColorBrush(Colors.Transparent)', P={Binding DefaultBrowserPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}}" />
                        <Button Grid.Column="2" Content="..." Command="{Binding SetDefaultBrowserPathCommand}" />
                    </Grid>

                    <StackPanel VerticalAlignment="Top" Margin="32,10,10,0">
                        <TextBlock Text="指定したアプリケーションの引数にURLを渡します"
                                   Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        <TextBlock Text="例: iexplore.exe https://pbs.twimg.com/media/CDc-gf3VIAAD6q9.png:orig"
                                   Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <!--バージョン情報-->
            <TabItem>
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="128" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Source="/ImageViewer;component/Resources/ImageViewer.png" Height="128"
                               VerticalAlignment="Top" HorizontalAlignment="Left"
                               RenderOptions.BitmapScalingMode="Fant" />
                        <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="ImageViewer" HorizontalAlignment="Left" VerticalAlignment="Top"
                                           FontSize="64" Foreground="{DynamicResource MatteBlack}" />
                                <TextBlock Text="{Binding Version, TargetNullValue=NaN}" HorizontalAlignment="Right"
                                           VerticalAlignment="Top" FontSize="12"
                                           Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <WrapPanel Margin="0,24,0,0">
                        <TextBlock Text="Built with: " HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                            <Hyperlink NavigateUri="https://htmlagilitypack.codeplex.com/"
                                       RequestNavigate="Hyperlink_RequestNavigate">
                                Html Agility Pack
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Text=", " HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                            <Hyperlink NavigateUri="https://icomoon.io/" RequestNavigate="Hyperlink_RequestNavigate">
                                IcoMoon
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Text=", " HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                            <Hyperlink NavigateUri="https://github.com/ugaya40/Livet"
                                       RequestNavigate="Hyperlink_RequestNavigate">
                                Livet
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Text=", " HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                            <Hyperlink NavigateUri="https://quickconverter.codeplex.com/"
                                       RequestNavigate="Hyperlink_RequestNavigate">
                                QuickConverter
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Text="." HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                    </WrapPanel>
                    <WrapPanel Margin="0,24,0,0">
                        <TextBlock Text="© 2015 mohemohe. " HorizontalAlignment="Left" VerticalAlignment="Top"
                                   FontSize="12" />
                        <TextBlock Text="Licensed under " HorizontalAlignment="Left" VerticalAlignment="Top"
                                   FontSize="12" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                            <Hyperlink
                                NavigateUri="https://raw.githubusercontent.com/mohemohe/ImageViewer/master/LICENSE"
                                RequestNavigate="Hyperlink_RequestNavigate">
                                The MIT License
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Text="." HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                    </WrapPanel>
                    <WrapPanel>
                        <TextBlock
                            Text="I would like to express my the biggest gratitude to "
                            HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                            <Hyperlink
                                NavigateUri="https://github.com/karno/"
                                RequestNavigate="Hyperlink_RequestNavigate">
                                @karno
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock
                            Text=" / "
                            HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12">
                            <Hyperlink
                                NavigateUri="http://krile.starwing.net/"
                                RequestNavigate="Hyperlink_RequestNavigate">
                                Krile StarryEyes
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock
                            Text=" ."
                            HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="12" />
                    </WrapPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
        <Border Grid.Row="1" Grid.ColumnSpan="2"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="0,1,0,0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="OK" Command="{Binding OKCommand}" Width="80" Height="24" VerticalAlignment="Center"
                        Margin="0,0,8,0" />
                <Button Content="キャンセル" Command="{Binding CancelCommand}" Width="80" Height="24"
                        VerticalAlignment="Center" Margin="0,0,8,0" />
                <Button Content="適用" Command="{Binding ApplyCommand}" Width="80" Height="24" VerticalAlignment="Center"
                        Margin="0,0,8,0" />
            </StackPanel>
        </Border>
    </Grid>
</Window>