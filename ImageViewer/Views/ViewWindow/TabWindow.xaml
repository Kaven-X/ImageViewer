<vw:WindowBase x:Class="ImageViewer.Views.ViewWindow.TabWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ImageViewer.Views"
        xmlns:vm="clr-namespace:ImageViewer.ViewModels"
        xmlns:vw="clr-namespace:ImageViewer.Views.ViewWindow"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        Title="ImageViewer" Height="520" Width="780" MinHeight="128"
        MinWidth="{Binding ElementName=StatusBarElements, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged}"
        ResizeMode="CanResizeWithGrip" Background="{DynamicResource MatteBlack}">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainWindowResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveImageCommand}" />
        <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyToClipboardCommand}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenInBrowserCommand}" />
        <KeyBinding Key="F" Modifiers="Control" Command="{Binding SearchByGoogleCommand}" />
    </Window.InputBindings>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger MessageKey="WindowMessage" Messenger="{Binding Messenger}"
                                     InvokeActionsOnlyWhileAttatchedObjectLoaded="True">
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="OpenMessage" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:SettingsWindow}" Mode="Modal" IsOwned="True"
                                                  InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="Save" Messenger="{Binding Messenger}">
            <l:SaveFileDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid Name="WindowRoot" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="24" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <TabControl x:Name="TabControl"
                        ItemsSource="{Binding DeferredImageItems, UpdateSourceTrigger=PropertyChanged}"
                        AlternationCount="{Binding DeferredImageItems.Count, UpdateSourceTrigger=PropertyChanged}"
                        SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        WindowChrome.IsHitTestVisibleInChrome="False">
                <TabControl.Template>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition
                                        Width="{Binding ElementName=CaptionButtons, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged}" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0" Panel.ZIndex="2" Margin="0"
                                      Background="{DynamicResource MatteBlack}">
                                    <RepeatButton Delay="300" Interval="15"
                                                  Template="{DynamicResource TabScrollRepeatButton}" Content="3"
                                                  FontFamily="Marlett"
                                                  Height="{Binding ElementName=Tabs, Path=ActualHeight, UpdateSourceTrigger=PropertyChanged}"
                                                  Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight }"
                                                  HorizontalAlignment="Left" Click="MoveLeft"
                                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                                  VerticalAlignment="Bottom" />
                                    <ScrollViewer Name="ScrollableTab" HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Hidden" MinHeight="24" Margin="25,0"
                                                  CanContentScroll="True">
                                        <StackPanel x:Name="Tabs" IsItemsHost="true" HorizontalAlignment="Left"
                                                    VerticalAlignment="Bottom" Orientation="Horizontal"
                                                    WindowChrome.IsHitTestVisibleInChrome="True" />
                                    </ScrollViewer>
                                    <RepeatButton Delay="300" Interval="15"
                                                  Template="{DynamicResource TabScrollRepeatButton}" Content="4"
                                                  FontFamily="Marlett"
                                                  Height="{Binding ElementName=Tabs, Path=ActualHeight, UpdateSourceTrigger=PropertyChanged}"
                                                  Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight }"
                                                  HorizontalAlignment="Right" Click="MoveRight"
                                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                                  VerticalAlignment="Bottom" />
                                </Grid>
                                <Grid Grid.Column="1" x:Name="CaptionButtons" Panel.ZIndex="1"
                                      Background="{DynamicResource MatteBlack}"
                                      WindowChrome.IsHitTestVisibleInChrome="True" MouseDown="CaptionBar_MouseDown"
                                      HorizontalAlignment="Right">
                                    <Grid.DataContext>
                                        <vm:CaptionBarViewModel />
                                    </Grid.DataContext>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
                                        </i:EventTrigger>
                                        <l:InteractionMessageTrigger MessageKey="WindowMessage"
                                                                     Messenger="{Binding Messenger}"
                                                                     InvokeActionsOnlyWhileAttatchedObjectLoaded="True">
                                            <l:WindowInteractionMessageAction />
                                        </l:InteractionMessageTrigger>
                                    </i:Interaction.Triggers>

                                    <StackPanel Orientation="Horizontal" Margin="5,0" HorizontalAlignment="Right"
                                                VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True"
                                                Panel.ZIndex="1" Background="{DynamicResource MatteBlack}">
                                        <Grid DataContext="{Binding DataContext, ElementName=WindowRoot}">
                                            <Button Command="{Binding OpenSettingsWindowCommand}" MinWidth="28"
                                                    Height="20" Margin="0,0,1,0"
                                                    Template="{DynamicResource CaptionButton}">
                                                <StackPanel Orientation="Horizontal" Margin="8,0">
                                                    <TextBlock Text="&#xE2F9;" FontFamily="Segoe UI Symbol"
                                                               FontSize="18" Foreground="{DynamicResource EvilWhite}"
                                                               VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                    <TextBlock Text="Settings" FontFamily="Meiryo UI" FontSize="10"
                                                               Foreground="{DynamicResource EvilWhite}"
                                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                                               Margin="4,0,0,0" />
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                        <Button Content="0" FontFamily="Marlett" Width="28" Height="20"
                                                Margin="0,0,1,0" Template="{DynamicResource CaptionButton}"
                                                Command="{Binding MinimizeCommand}" />
                                        <Button Content="{Binding MaximizeButtonContent}" FontFamily="Marlett"
                                                Width="28" Height="20" Margin="0,0,1,0"
                                                Template="{DynamicResource CaptionButton}"
                                                Command="{Binding MaximizeCommand}" />
                                        <Button Content="r" FontFamily="Marlett" Width="48" Height="20" Margin="0"
                                                Template="{DynamicResource CloseButton}"
                                                Command="{Binding CloseCommand}" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                            <Border BorderBrush="{DynamicResource MetroBlue}" BorderThickness="0,4,0,0" Grid.Row="1"
                                    Panel.ZIndex="1" />
                            <ContentPresenter ContentSource="SelectedContent" Grid.Row="2" Panel.ZIndex="0" />
                        </Grid>
                    </ControlTemplate>
                </TabControl.Template>

                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <Border Name="Tab" WindowChrome.IsHitTestVisibleInChrome="True" MouseWheel="Tab_MouseWheel"
                                PreviewMouseDown="Tab_PreviewMouseDown">
                            <WrapPanel>
                                <TextBlock Text="{Binding Name}" Padding="12,0" TextTrimming="CharacterEllipsis" MaxWidth="{Binding ElementName=StatusBarElements, Path=ActualWidth, UpdateSourceTrigger=PropertyChanged, Converter={qc:QuickConverter '$P * 0.75'}}" />
                                <Button
                                    x:Name="CloseButton"
                                    ToolTip="Close"
                                    Content="r"
                                    FontFamily="Marlett"
                                    Margin="0"
                                    Template="{DynamicResource TabCloseButton}"
                                    Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <l:LivetCallMethodAction
                                                MethodTarget="{
                                                    Binding Path=DataContext,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}},
                                                    Mode=OneWay}"
                                                MethodName="TabClose"
                                                MethodParameter="{
                                                    Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}},
                                                    Path=(ItemsControl.AlternationIndex)}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </WrapPanel>
                        </Border>
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <Grid x:Name="ImageWrapper" Background="{x:Null}">
                            <Grid DataContext="{Binding DataContext, ElementName=WindowRoot}" Background="#00000000"
                                  MouseWheel="Zoom" MouseDown="StartTranslate" MouseUp="StopTranslate"
                                  MouseMove="Translate">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="SaveAs" InputGestureText="Ctrl+S"
                                                  Command="{Binding SaveImageCommand}" />
                                        <MenuItem Header="Copy to Clipboard" InputGestureText="Ctrl+C"
                                                  Command="{Binding CopyToClipboardCommand}" />
                                        <MenuItem Header="Open in Browser" InputGestureText="Ctrl+O"
                                                  Command="{Binding OpenInBrowserCommand}" />
                                        <MenuItem Header="Search by Google Images" InputGestureText="Ctrl+F"
                                                  Command="{Binding SearchByGoogleCommand}" />
                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="Window.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Loading"
                                                                               Storyboard.TargetProperty="(Image.Source)"
                                                                               Duration="0:0:0.4"
                                                                               RepeatBehavior="Forever">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <BitmapImage
                                                                UriSource="/ImageViewer;component/Resources/loading0.png" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <BitmapImage
                                                                UriSource="/ImageViewer;component/Resources/loading1.png" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <BitmapImage
                                                                UriSource="/ImageViewer;component/Resources/loading2.png" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <BitmapImage
                                                                UriSource="/ImageViewer;component/Resources/loading3.png" />
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Grid.Triggers>

                                <Image Name="Image"
                                       Source="{Binding Bitmap, UpdateSourceTrigger=PropertyChanged}"
                                       DataContext="{Binding DataContext, ElementName=ImageWrapper}"
                                       RenderOptions.BitmapScalingMode="Fant"
                                       SizeChanged="Image_SizeChanged"
                                       RenderTransformOrigin="0.5, 0.5"
                                       SnapsToDevicePixels="True">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform
                                                ScaleX="{Binding Zoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                ScaleY="{Binding Zoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                CenterX="{qc:Binding '$P * -1', P={Binding Translate.X, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}}"
                                                CenterY="{qc:Binding '$P * -1', P={Binding Translate.Y, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}}" />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform
                                                X="{Binding Translate.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Y="{Binding Translate.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                                <Image Name="Loading"
                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                       Stretch="None" Visibility="{Binding IsLoading}"
                                       DataContext="{Binding DataContext, ElementName=ImageWrapper}" />
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
            <WrapPanel x:Name="LeftBottomButton" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                <Button Command="{Binding SaveImageCommand}" ToolTip="SaveAs" VerticalAlignment="Bottom"
                        HorizontalAlignment="Left" Template="{DynamicResource TransparentButton}">
                    <Image Source="/Resources/IcoMoon/save.png" Width="24" Height="24" />
                </Button>
                <Button Command="{Binding CopyToClipboardCommand}" ToolTip="Copy to Clipboard"
                        VerticalAlignment="Bottom" HorizontalAlignment="Left"
                        Template="{DynamicResource TransparentButton}">
                    <Image Source="/ImageViewer;component/Resources/IcoMoon/copy.png" Width="24" Height="24" />
                </Button>
                <Button Command="{Binding OpenInBrowserCommand}" ToolTip="Open in Browser" VerticalAlignment="Bottom"
                        HorizontalAlignment="Left" Template="{DynamicResource TransparentButton}">
                    <Image Source="/ImageViewer;component/Resources/IcoMoon/open.png" Width="24" Height="24" />
                </Button>
                <Button Command="{Binding SearchByGoogleCommand}" ToolTip="Search by Google Images"
                        VerticalAlignment="Bottom" HorizontalAlignment="Left"
                        Template="{DynamicResource TransparentButton}">
                    <Image Source="/ImageViewer;component/Resources/IcoMoon/search.png" Width="24" Height="24" />
                </Button>
            </WrapPanel>
            <WrapPanel x:Name="RightBottomButton" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <Button Command="{Binding ResetZoomCommand}" ToolTip="dot by dot"
                        VerticalAlignment="Bottom" HorizontalAlignment="Left"
                        Template="{DynamicResource TransparentButton}">
                    <Image Source="/ImageViewer;component/Resources/IcoMoon/shrink.png" Width="24" Height="24" />
                </Button>
            </WrapPanel>
        </Grid>
        <Grid Grid.Row="1" Background="{DynamicResource MetroBlue}" Panel.ZIndex="1">
            <WrapPanel x:Name="StatusBarElements" HorizontalAlignment="Left">
                <Label Content="" Padding="0,5" />
                <Label Content="Render:" Padding="5,0" VerticalAlignment="Center"
                       Foreground="{DynamicResource EvilWhite}" />
                <Label Content="{Binding ImageRenderWidth, FallbackValue=0}" Padding="0" VerticalAlignment="Center"
                       Foreground="{DynamicResource EvilWhite}" />
                <Label Content="x" Padding="2,0" VerticalAlignment="Center" Foreground="{DynamicResource EvilWhite}" />
                <Label Content="{Binding ImageRenderHeight, FallbackValue=0}" Padding="0" VerticalAlignment="Center"
                       Foreground="{DynamicResource EvilWhite}" />
                <Label Content="px" Padding="5,0" VerticalAlignment="Center" Foreground="{DynamicResource EvilWhite}" />

                <Label Content="Image:" Padding="5,0" VerticalAlignment="Center"
                       Foreground="{DynamicResource EvilWhite}" />
                <Label Content="{Binding SelectedImageWidth, FallbackValue=0, UpdateSourceTrigger=PropertyChanged}"
                       Padding="0" VerticalAlignment="Center" Foreground="{DynamicResource EvilWhite}" />
                <Label Content="x" Padding="2,0" VerticalAlignment="Center" Foreground="{DynamicResource EvilWhite}" />
                <Label Content="{Binding SelectedImageHeight, FallbackValue=0, UpdateSourceTrigger=PropertyChanged}"
                       Padding="0" VerticalAlignment="Center" Foreground="{DynamicResource EvilWhite}" />
                <Label Content="px" Padding="5,0" VerticalAlignment="Center" Foreground="{DynamicResource EvilWhite}" />

                <Label Content="Zoom:" Padding="5,0" VerticalAlignment="Center"
                       Foreground="{DynamicResource EvilWhite}" />
                <Label Content="{Binding Zoom, FallbackValue=0}" Padding="0" VerticalAlignment="Center"
                       Foreground="{DynamicResource EvilWhite}" />
                <Label Content="%" Padding="5,0" VerticalAlignment="Center" Foreground="{DynamicResource EvilWhite}" />

                <Label Content="padding" Padding="5,0" VerticalAlignment="Center" Foreground="{x:Null}" />
            </WrapPanel>
        </Grid>
    </Grid>
</vw:WindowBase>
